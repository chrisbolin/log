{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/chris/repos/log/pages/index.js\";\nimport format from \"date-fns/format\";\nexport var __N_SSG = true;\nexport default function Index(_ref) {\n  var _this = this;\n\n  var entries = _ref.entries;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: entries.map(function (_ref2, idx) {\n      var html = _ref2.html,\n          date = _ref2.date;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: format(new Date(date), \"MMMM d, yyyy\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          dangerouslySetInnerHTML: {\n            __html: html\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, _this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n_c = Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/chris/repos/log/pages/index.js"],"names":["format","Index","entries","map","idx","html","date","Date","__html"],"mappings":";;AAEA,OAAOA,MAAP,MAAmB,iBAAnB;;AAIA,eAAe,SAASC,KAAT,OAA4B;AAAA;;AAAA,MAAXC,OAAW,QAAXA,OAAW;AACzC,sBACE;AAAA,cACGA,OAAO,CAACC,GAAR,CAAY,iBAAiBC,GAAjB;AAAA,UAAGC,IAAH,SAAGA,IAAH;AAAA,UAASC,IAAT,SAASA,IAAT;AAAA,0BACX;AAAA,gCACE;AAAA,oBAAMN,MAAM,CAAC,IAAIO,IAAJ,CAASD,IAAT,CAAD,EAAiB,cAAjB;AAAZ;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE;AAAK,UAAA,uBAAuB,EAAE;AAAEE,YAAAA,MAAM,EAAEH;AAAV;AAA9B;AAAA;AAAA;AAAA;AAAA,iBAFF;AAAA,SAAUD,GAAV;AAAA;AAAA;AAAA;AAAA,eADW;AAAA,KAAZ;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;KAXuBH,K","sourcesContent":["import path from \"path\";\nimport fs from \"fs\";\nimport format from \"date-fns/format\";\n\nimport { makeEntry } from \"../server/entires\";\n\nexport default function Index({ entries }) {\n  return (\n    <div>\n      {entries.map(({ html, date }, idx) => (\n        <div key={idx}>\n          <div>{format(new Date(date), \"MMMM d, yyyy\")}</div>\n          <div dangerouslySetInnerHTML={{ __html: html }} />\n        </div>\n      ))}\n    </div>\n  );\n}\n\nasync function mapArrayAsync(array, callback) {\n  const resultingArray = [];\n  for (let index = 0; index < array.length; index++) {\n    resultingArray.push(await callback(array[index], index, array));\n  }\n  return resultingArray;\n}\n\nexport async function getStaticProps() {\n  const entriesDir = path.join(process.cwd(), \"entries\");\n  const filepaths = await fs.promises.readdir(entriesDir);\n  const entries = await mapArrayAsync(filepaths, (filepath) =>\n    makeEntry(filepath, entriesDir)\n  );\n\n  return {\n    props: { entries },\n  };\n}\n"]},"metadata":{},"sourceType":"module"}