{"ast":null,"code":"const path = require(\"path\");\n\nconst fs = require(\"fs\").promises;\n\nconst marked = require(\"marked\");\n\nfunction getDate(filename) {\n  const [year, month, day] = filename.split(\".\")[0].split(\"-\");\n  return `${year}-${month}-${day}T12:00:00.000Z`;\n}\n\nexport async function entries() {\n  const entriesDir = path.join(process.cwd(), \"entries\");\n  const filepaths = await fs.readdir(entriesDir);\n  const entries = await mapArrayAsync(filepaths, filepath => makeEntry(filepath, entriesDir));\n  return entries;\n}\nexport async function makeEntry(filename, directory) {\n  const filepath = path.join(directory, filename);\n  const raw = await fs.readFile(filepath, {\n    encoding: \"utf-8\"\n  });\n  const html = marked(raw);\n  const date = getDate(filename);\n  return {\n    html,\n    date\n  };\n}","map":{"version":3,"sources":["/Users/chris/repos/log/server/entires.js"],"names":["path","require","fs","promises","marked","getDate","filename","year","month","day","split","entries","entriesDir","join","process","cwd","filepaths","readdir","mapArrayAsync","filepath","makeEntry","directory","raw","readFile","encoding","html","date"],"mappings":"AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMC,EAAE,GAAGD,OAAO,CAAC,IAAD,CAAP,CAAcE,QAAzB;;AACA,MAAMC,MAAM,GAAGH,OAAO,CAAC,QAAD,CAAtB;;AAEA,SAASI,OAAT,CAAiBC,QAAjB,EAA2B;AACzB,QAAM,CAACC,IAAD,EAAOC,KAAP,EAAcC,GAAd,IAAqBH,QAAQ,CAACI,KAAT,CAAe,GAAf,EAAoB,CAApB,EAAuBA,KAAvB,CAA6B,GAA7B,CAA3B;AACA,SAAQ,GAAEH,IAAK,IAAGC,KAAM,IAAGC,GAAI,gBAA/B;AACD;;AAED,OAAO,eAAeE,OAAf,GAAyB;AAC9B,QAAMC,UAAU,GAAGZ,IAAI,CAACa,IAAL,CAAUC,OAAO,CAACC,GAAR,EAAV,EAAyB,SAAzB,CAAnB;AACA,QAAMC,SAAS,GAAG,MAAMd,EAAE,CAACe,OAAH,CAAWL,UAAX,CAAxB;AACA,QAAMD,OAAO,GAAG,MAAMO,aAAa,CAACF,SAAD,EAAaG,QAAD,IAC7CC,SAAS,CAACD,QAAD,EAAWP,UAAX,CADwB,CAAnC;AAGA,SAAOD,OAAP;AACD;AAED,OAAO,eAAeS,SAAf,CAAyBd,QAAzB,EAAmCe,SAAnC,EAA8C;AACnD,QAAMF,QAAQ,GAAGnB,IAAI,CAACa,IAAL,CAAUQ,SAAV,EAAqBf,QAArB,CAAjB;AACA,QAAMgB,GAAG,GAAG,MAAMpB,EAAE,CAACqB,QAAH,CAAYJ,QAAZ,EAAsB;AAAEK,IAAAA,QAAQ,EAAE;AAAZ,GAAtB,CAAlB;AACA,QAAMC,IAAI,GAAGrB,MAAM,CAACkB,GAAD,CAAnB;AACA,QAAMI,IAAI,GAAGrB,OAAO,CAACC,QAAD,CAApB;AACA,SAAO;AACLmB,IAAAA,IADK;AAELC,IAAAA;AAFK,GAAP;AAID","sourcesContent":["const path = require(\"path\");\nconst fs = require(\"fs\").promises;\nconst marked = require(\"marked\");\n\nfunction getDate(filename) {\n  const [year, month, day] = filename.split(\".\")[0].split(\"-\");\n  return `${year}-${month}-${day}T12:00:00.000Z`;\n}\n\nexport async function entries() {\n  const entriesDir = path.join(process.cwd(), \"entries\");\n  const filepaths = await fs.readdir(entriesDir);\n  const entries = await mapArrayAsync(filepaths, (filepath) =>\n    makeEntry(filepath, entriesDir)\n  );\n  return entries;\n}\n\nexport async function makeEntry(filename, directory) {\n  const filepath = path.join(directory, filename);\n  const raw = await fs.readFile(filepath, { encoding: \"utf-8\" });\n  const html = marked(raw);\n  const date = getDate(filename);\n  return {\n    html,\n    date,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}