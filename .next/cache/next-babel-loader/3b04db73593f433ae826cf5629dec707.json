{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/chris/repos/log/pages/index.js\";\nimport path from \"path\";\nimport fs from \"fs\";\nexport default function Index({\n  entries\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: entries.map(({\n      html\n    }, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: html\n      }\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n\nasync function mapArrayAsync(array, callback) {\n  const resultingArray = [];\n\n  for (let index = 0; index < array.length; index++) {\n    resultingArray.push(await callback(array[index], index, array));\n  }\n\n  return resultingArray;\n}\n\nexport async function makeEntry(filepath) {\n  const html = fs.promises.readFile(filepath);\n  return {\n    html\n  };\n}\nexport async function getStaticProps() {\n  const entriesDir = path.join(process.cwd(), \"entries\");\n  console.log(entriesDir);\n  const filepaths = (await fs.promises.readdir(entriesDir)).map(filename => path.join(entriesDir, filename));\n  const entries = await mapArrayAsync(filepaths, makeEntry);\n  return {\n    props: {\n      entries\n    }\n  };\n}","map":{"version":3,"sources":["/Users/chris/repos/log/pages/index.js"],"names":["path","fs","Index","entries","map","html","idx","__html","mapArrayAsync","array","callback","resultingArray","index","length","push","makeEntry","filepath","promises","readFile","getStaticProps","entriesDir","join","process","cwd","console","log","filepaths","readdir","filename","props"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAOC,EAAP,MAAe,IAAf;AAEA,eAAe,SAASC,KAAT,CAAe;AAAEC,EAAAA;AAAF,CAAf,EAA4B;AACzC,sBACE;AAAA,cACGA,OAAO,CAACC,GAAR,CAAY,CAAC;AAAEC,MAAAA;AAAF,KAAD,EAAWC,GAAX,kBACX;AAAe,MAAA,uBAAuB,EAAE;AAAEC,QAAAA,MAAM,EAAEF;AAAV;AAAxC,OAAUC,GAAV;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;AAED,eAAeE,aAAf,CAA6BC,KAA7B,EAAoCC,QAApC,EAA8C;AAC5C,QAAMC,cAAc,GAAG,EAAvB;;AACA,OAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGH,KAAK,CAACI,MAAlC,EAA0CD,KAAK,EAA/C,EAAmD;AACjDD,IAAAA,cAAc,CAACG,IAAf,CAAoB,MAAMJ,QAAQ,CAACD,KAAK,CAACG,KAAD,CAAN,EAAeA,KAAf,EAAsBH,KAAtB,CAAlC;AACD;;AACD,SAAOE,cAAP;AACD;;AAED,OAAO,eAAeI,SAAf,CAAyBC,QAAzB,EAAmC;AACxC,QAAMX,IAAI,GAAGJ,EAAE,CAACgB,QAAH,CAAYC,QAAZ,CAAqBF,QAArB,CAAb;AACA,SAAO;AACLX,IAAAA;AADK,GAAP;AAGD;AAED,OAAO,eAAec,cAAf,GAAgC;AACrC,QAAMC,UAAU,GAAGpB,IAAI,CAACqB,IAAL,CAAUC,OAAO,CAACC,GAAR,EAAV,EAAyB,SAAzB,CAAnB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,UAAZ;AACA,QAAMM,SAAS,GAAG,CAAC,MAAMzB,EAAE,CAACgB,QAAH,CAAYU,OAAZ,CAAoBP,UAApB,CAAP,EAAwChB,GAAxC,CAA6CwB,QAAD,IAC5D5B,IAAI,CAACqB,IAAL,CAAUD,UAAV,EAAsBQ,QAAtB,CADgB,CAAlB;AAGA,QAAMzB,OAAO,GAAG,MAAMK,aAAa,CAACkB,SAAD,EAAYX,SAAZ,CAAnC;AAEA,SAAO;AACLc,IAAAA,KAAK,EAAE;AAAE1B,MAAAA;AAAF;AADF,GAAP;AAGD","sourcesContent":["import path from \"path\";\nimport fs from \"fs\";\n\nexport default function Index({ entries }) {\n  return (\n    <div>\n      {entries.map(({ html }, idx) => (\n        <div key={idx} dangerouslySetInnerHTML={{ __html: html }} />\n      ))}\n    </div>\n  );\n}\n\nasync function mapArrayAsync(array, callback) {\n  const resultingArray = [];\n  for (let index = 0; index < array.length; index++) {\n    resultingArray.push(await callback(array[index], index, array));\n  }\n  return resultingArray;\n}\n\nexport async function makeEntry(filepath) {\n  const html = fs.promises.readFile(filepath);\n  return {\n    html,\n  };\n}\n\nexport async function getStaticProps() {\n  const entriesDir = path.join(process.cwd(), \"entries\");\n  console.log(entriesDir);\n  const filepaths = (await fs.promises.readdir(entriesDir)).map((filename) =>\n    path.join(entriesDir, filename)\n  );\n  const entries = await mapArrayAsync(filepaths, makeEntry);\n\n  return {\n    props: { entries },\n  };\n}\n"]},"metadata":{},"sourceType":"module"}