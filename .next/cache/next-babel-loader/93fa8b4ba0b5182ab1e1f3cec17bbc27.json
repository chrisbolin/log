{"ast":null,"code":"import _regeneratorRuntime from \"/Users/chris/repos/log/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/chris/repos/log/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/chris/repos/log/pages/index.js\";\nexport var __N_SSG = true;\nexport default function Index(_ref) {\n  var _this = this;\n\n  var entries = _ref.entries;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: entries.map(function (_ref2, idx) {\n      var html = _ref2.html;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        dangerouslySetInnerHTML: {\n          __html: html\n        }\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n_c = Index;\nexport function makeEntry(_x) {\n  return _makeEntry.apply(this, arguments);\n}\n\nfunction _makeEntry() {\n  _makeEntry = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(filename) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\");\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _makeEntry.apply(this, arguments);\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/chris/repos/log/pages/index.js"],"names":["Index","entries","map","idx","html","__html","makeEntry","filename"],"mappings":";;;;;AAGA,eAAe,SAASA,KAAT,OAA4B;AAAA;;AAAA,MAAXC,OAAW,QAAXA,OAAW;AACzC,sBACE;AAAA,cACGA,OAAO,CAACC,GAAR,CAAY,iBAAWC,GAAX;AAAA,UAAGC,IAAH,SAAGA,IAAH;AAAA,0BACX;AAAe,QAAA,uBAAuB,EAAE;AAAEC,UAAAA,MAAM,EAAED;AAAV;AAAxC,SAAUD,GAAV;AAAA;AAAA;AAAA;AAAA,eADW;AAAA,KAAZ;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;KARuBH,K;AAkBxB,gBAAsBM,SAAtB;AAAA;AAAA;;;wEAAO,iBAAyBC,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import path from \"path\";\nimport fs from \"fs\";\n\nexport default function Index({ entries }) {\n  return (\n    <div>\n      {entries.map(({ html }, idx) => (\n        <div key={idx} dangerouslySetInnerHTML={{ __html: html }} />\n      ))}\n    </div>\n  );\n}\n\nasync function mapArrayAsync(array, callback) {\n  const resultingArray = [];\n  for (let index = 0; index < array.length; index++) {\n    resultingArray.push(await callback(array[index], index, array));\n  }\n  return resultingArray;\n}\n\nexport async function makeEntry(filename) {\n  return;\n}\n\nexport async function getStaticProps() {\n  const entriesDir = path.join(process.cwd(), \"entries\");\n  console.log(entriesDir);\n  const filepaths = (await fs.promises.readdir(entriesDir)).map((filename) =>\n    path.join(entriesDir, filename)\n  );\n  const entries = await mapArrayAsync(filepaths, makeEntry);\n\n  return {\n    props: { entries },\n  };\n}\n"]},"metadata":{},"sourceType":"module"}